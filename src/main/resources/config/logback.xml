<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">

    <!-- 读取 spring.application.name 属性来生成日志文件名
        scope：作用域
        name：在 logback-spring.xml 使用的键
        source：application.properties 文件中的键，spring.servlet.application.name 也可以时启动参数：java -jar xxx.jar -Dspring.servlet.application.name=xxx
     defaultValue：默认值
     -->
    <springProperty scope="context" name="appName" source="spring.servlet.application.name" defaultValue="kongLongLogFile"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--
        yyyy-MM-dd HH:mm:ss.SSS: 日志时间
        LOG_LEVEL_PATTERN： 日志级别
        PID： 进程id
        t： 线程名
        logger: 打印日志类名
        LOG_EXCEPTION_CONVERSION_WORD： 日志转换器
    -->
    <!--占位符定义：控制台彩色日志格式-->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!--占位符定义：文件日志格式-->
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%15.15t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!--占位符定义：日志文件路径，文件-->
    <property name="FILE_PATH" value="./logs"/>

    <!--日志输出的目的地-->
    <!--日志输出的目的地：控制台，本地启服务使用-->
    <appender name="CONSOLE_LOCAL" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- pattern节点，用来设置日志的输入格式 -->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!--日志输出的目的地：文件，线上定位问题使用-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--        <file>${FILE_PATH}/${appName}.log</file>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${FILE_PATH}/%d{yyyy-MM-dd}/${appName}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--最大保存日期-->
            <MaxHistory>7</MaxHistory>


            <!--单个文件最大200MB，自动换文件-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>


        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>

    </appender>


    <!--多环境日志配置-->
    <!--线上环境-->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="CONSOLE_LOCAL"/>
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>


    <!-- 开发环境日志级别为DEBUG/并且开发环境不写日志文件 -->
    <springProfile name="dev">
        <root level="DEBUG">
            <appender-ref ref="CONSOLE_LOCAL"/>
        </root>
    </springProfile>

</configuration>